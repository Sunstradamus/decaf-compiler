; ModuleID = 'GreatestCommonDivisor'

@a = global i32 10
@b = global i32 20

declare void @print_int(i32)

define i32 @main() {
entry:
  %z = alloca i32
  store i32 0, i32* %z
  %ld_a = load i32, i32* @a
  %ld_b = load i32, i32* @b
  %calltmp = call i32 @gcd(i32 %ld_a, i32 %ld_b)
  call void @print_int(i32 %calltmp)
  ret i32 0
}

define i1 @iszero(i32, i32) {
entry:
  %a = alloca i32
  store i32 %0, i32* %a
  %b = alloca i32
  store i32 %1, i32* %b
  %ld_b = load i32, i32* %b
  %eqtmp = icmp eq i32 %ld_b, 0
  br i1 %eqtmp, label %then, label %else

then:                                             ; preds = %entry
  %ld_a = load i32, i32* %a
  ret i32 %ld_a
  br label %endif

else:                                             ; preds = %entry
  %ld_b1 = load i32, i32* %b
  %ld_a2 = load i32, i32* %a
  %ld_b3 = load i32, i32* %b
  %mod_1part = srem i32 %ld_a2, %ld_b3
  %mod_2part = add i32 %ld_b3, %mod_1part
  %mod_3part = srem i32 %mod_2part, %ld_b3
  %calltmp = call i32 @gcd(i32 %ld_b1, i32 %mod_3part)
  ret i32 %calltmp
  br label %endif

endif:                                            ; preds = %else, %then
  ret i1 false
}

define i32 @gcd(i32, i32) {
entry:
  %a = alloca i32
  store i32 %0, i32* %a
  %b = alloca i32
  store i32 %1, i32* %b
  %ld_a = load i32, i32* %a
  %ld_b = load i32, i32* %b
  %calltmp = call i1 @iszero(i32 %ld_a, i32 %ld_b)
  ret i1 %calltmp
  ret i32 0
}
