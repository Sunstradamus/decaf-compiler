; ModuleID = 'foo'

declare void @print_int(i32)

define i32 @main() {
entry:
  %flag = alloca i1
  store i1 false, i1* %flag
  %a = alloca i1
  store i1 false, i1* %a
  %b = alloca i1
  store i1 false, i1* %b
  %c = alloca i1
  store i1 false, i1* %c
  %size = alloca i32
  store i32 0, i32* %size
  store i1 true, i1* %a
  store i1 false, i1* %b
  store i1 true, i1* %c
  %ld_a = load i1, i1* %a
  br i1 %ld_a, label %or_end, label %or_right

or_right:                                         ; preds = %entry
  %ld_b = load i1, i1* %b
  br i1 %ld_b, label %and_right, label %and_end

and_right:                                        ; preds = %or_right
  %ld_c = load i1, i1* %c
  %nottmp = xor i1 %ld_c, true
  %andtmp = and i1 %ld_b, %nottmp
  br label %and_end

and_end:                                          ; preds = %and_right, %or_right
  %andphi = phi i1 [ %ld_b, %or_right ], [ %andtmp, %and_right ]
  %ortmp = or i1 %ld_a, %andphi
  br label %or_end

or_end:                                           ; preds = %and_end, %entry
  %orphi = phi i1 [ %ld_a, %entry ], [ %ortmp, %and_end ]
  store i1 %orphi, i1* %flag
  store i32 0, i32* %size
  %ld_size = load i32, i32* %size
  call void @print_int(i32 %ld_size)
  ret i32 0
}
